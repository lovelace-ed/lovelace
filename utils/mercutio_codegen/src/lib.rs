use proc_macro::TokenStream;
mod inner;

#[proc_macro_derive(
    CSS,
    attributes(
        elements,
        text_anchor,
        direction,
        font_family,
        border_left,
        speak_punctuation,
        margin_right,
        letter_spacing,
        border_right,
        pause_after,
        name,
        font_size_adjust,
        padding_right,
        quotes,
        color,
        outline_width,
        empty_cells,
        text_align,
        azimuth,
        text_decoration,
        unicode_bidi,
        src,
        border_top_width,
        widows,
        position,
        width,
        height,
        outline_style,
        list_style,
        margin_bottom,
        glyph_orientation_vertical,
        list_style_type,
        border_top_color,
        font,
        speak,
        padding,
        border_width,
        caption_side,
        play_during,
        richness,
        writing_mode,
        display,
        word_spacing,
        margin,
        background,
        border_left_width,
        pitch,
        content,
        binding,
        border_collapse,
        padding_left,
        table_layout,
        min_height,
        float,
        orphans,
        font_weight,
        background_repeat,
        text_shadow,
        border,
        border_bottom_width,
        background_color,
        cue,
        line_height,
        marker_offset,
        page_break_before,
        cursor,
        background_attachment,
        overflow,
        counter_increment,
        list_style_image,
        font_stretch,
        border_left_color,
        counter_reset,
        kerning,
        max_width,
        bottom,
        max_height,
        elevation,
        background_position,
        border_bottom_style,
        speak_numeral,
        baseline_shift,
        rendering_intent,
        white_space,
        outline_color,
        right,
        border_left_style,
        border_bottom,
        clear,
        marker,
        text_transform,
        speak_header,
        text_indent,
        font_variant,
        outline,
        border_spacing,
        glyph_orientation_horizontal,
        font_style,
        stress,
        padding_bottom,
        left,
        border_right_width,
        alignment_baseline,
        speech_rate,
        min_width,
        border_right_style,
        font_size,
        property_name,
        clip,
        visibility,
        pause,
        padding_top,
        border_style,
        margin_top,
        dominant_baseline,
        voice_family,
        border_top_style,
        margin_left,
        vertical_align,
        page_break_after,
        top,
        z_index,
        pause_before,
        list_style_position,
        border_color,
        volume,
        cue_after,
        pitch_range,
        page_break_inside,
        marker_start,
        marker_end,
        marker_mid,
        border_bottom_color,
        cue_before,
        background_image,
        border_top,
        border_right_color,
    )
)]
pub fn derive_css(input: TokenStream) -> TokenStream {
    inner::css_inner(syn::parse_macro_input!(input as syn::DeriveInput)).into()
}
